{"version":3,"sources":["img/background.JPG","img/react_logo.svg","components/Cover.js","components/Header.js","components/About.js","components/Projects.js","components/Experience.js","components/Education.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Cover","react_default","a","createElement","className","src","background","alt","Component","Header","header","document","getElementById","sticky","offsetTop","window","addEventListener","_","pageYOffset","classList","add","remove","id","href","About","Projects","Experience","Education","Footer","target","rel","reactLogo","App","src_components_Cover","src_components_Header","src_components_About","src_components_Projects","src_components_Experience","src_components_Education","src_components_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yXCsBzBC,0LAhBX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAYF,UAAU,YAAYG,IAAI,SAChDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,8BAGAF,EAAAC,EAAAC,cAAA,sIATUK,cC2BLC,qMA1BX,IAAIC,EAASC,SAASC,eAAe,YACjCC,EAASH,EAAOI,UAEpBC,OAAOC,iBAAiB,SAAU,SAAUC,GACtCF,OAAOG,YAAcL,EACvBH,EAAOS,UAAUC,IAAI,cAErBV,EAAOS,UAAUE,OAAO,iDAM5B,OACEpB,EAAAC,EAAAC,cAAA,OAAKmB,GAAG,WAAWlB,UAAU,UAC3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGoB,KAAK,UAAR,UACJtB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGoB,KAAK,aAAR,aACJtB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGoB,KAAK,eAAR,eACJtB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGoB,KAAK,cAAR,uBArBOf,cCUNgB,0LARX,OACEvB,EAAAC,EAAAC,cAAA,OAAKmB,GAAG,QAAQlB,UAAU,WAA1B,gBAHcI,cCULiB,0LARX,OACExB,EAAAC,EAAAC,cAAA,OAAKmB,GAAG,WAAWlB,UAAU,WAA7B,mBAHiBI,cCURkB,0LARX,OACEzB,EAAAC,EAAAC,cAAA,OAAKmB,GAAG,aAAalB,UAAU,WAA/B,qBAHmBI,cCUVmB,0LARX,OACE1B,EAAAC,EAAAC,cAAA,OAAKmB,GAAG,YAAYlB,UAAU,WAA9B,oBAHkBI,8BCcToB,0LAXX,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,aAEIH,EAAAC,EAAAC,cAAA,KAAGoB,KAAK,sBAAsBM,OAAO,SAASC,IAAI,uBAClD7B,EAAAC,EAAAC,cAAA,OAAKE,IAAK0B,IAAW3B,UAAU,OAAOG,IAAI,kBAN/BC,cCqBNwB,MAdf,WACE,OACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC8B,EAAD,MACAhC,EAAAC,EAAAC,cAAC+B,EAAD,MACAjC,EAAAC,EAAAC,cAACgC,EAAD,MACAlC,EAAAC,EAAAC,cAACiC,EAAD,MACAnC,EAAAC,EAAAC,cAACkC,EAAD,MACApC,EAAAC,EAAAC,cAACmC,EAAD,MACArC,EAAAC,EAAAC,cAACoC,EAAD,QCRcC,QACW,cAA7BzB,OAAO0B,SAASC,UAEe,UAA7B3B,OAAO0B,SAASC,UAEhB3B,OAAO0B,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASnC,SAASC,eAAe,SD2H3C,kBAAmBmC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.32887d15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.4d4c317c.JPG\";","module.exports = __webpack_public_path__ + \"static/media/react_logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport background from '../img/background.JPG';\nimport \"./Cover.css\";\n\nclass Cover extends Component {\n  render() {\n    return (\n      <div className=\"Cover\">\n        <img src={background} className=\"Cover-img\" alt=\"logo\" />\n        <div className=\"Cover-text\">\n          <h1>\n            I'm Xinhe Zhang.\n          </h1>\n          <h2>\n            A CMU ECE Master student graduating in December 2020. Focusing on Machine Learning. Once a full-stack engineer.\n          </h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cover;\n","import React, { Component } from 'react';\nimport \"./Header.css\";\n\nclass Header extends Component {\n  componentDidMount() {\n    var header = document.getElementById(\"myHeader\");\n    var sticky = header.offsetTop;\n\n    window.addEventListener('scroll', function (_) {\n      if (window.pageYOffset > sticky) {\n        header.classList.add(\"sticky-top\");\n      } else {\n        header.classList.remove(\"sticky-top\");\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"myHeader\" className=\"Header\">\n        <div className=\"Header-tab\">\n          <li><a href=\"#about\">About</a></li>\n          <li><a href=\"#projects\">Projects</a></li>\n          <li><a href=\"#experience\">Experience</a></li>\n          <li><a href=\"#education\">Education</a></li>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport \"./About.css\";\n\nclass About extends Component {\n  render() {\n    return (\n      <div id=\"about\" className=\"section\">\n        About\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport \"./Projects.css\";\n\nclass Projects extends Component {\n  render() {\n    return (\n      <div id=\"projects\" className=\"section\">\n        Projects\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport \"./Experience.css\";\n\nclass Experience extends Component {\n  render() {\n    return (\n      <div id=\"experience\" className=\"section\">\n        Experience\n      </div>\n    );\n  }\n}\n\nexport default Experience;\n","import React, { Component } from 'react';\nimport \"./Education.css\";\n\nclass Education extends Component {\n  render() {\n    return (\n      <div id=\"education\" className=\"section\">\n        Education\n      </div>\n    );\n  }\n}\n\nexport default Education;\n","import React, { Component } from 'react';\nimport reactLogo from '../img/react_logo.svg';\nimport \"./Footer.css\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"Footer\">\n        Powered By\n          <a href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\" >\n          <img src={reactLogo} className=\"icon\" alt=\"logo\" />\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\n\nimport Cover from './components/Cover';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Projects from './components/Projects';\nimport Experience from './components/Experience';\nimport Education from './components/Education';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Cover />\n      <Header />\n      <About />\n      <Projects />\n      <Experience />\n      <Education />\n      <Footer />\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}